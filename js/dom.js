const title = document.getElementById("title");
console.log(title);


const btn = document.getElementById("btn");
const btn2 = document.getElementById("btn2");
const btn3 = document.getElementById("btn3");
let clickNumber = document.getElementById("click-number");


btn.addEventListener("click", function () {
    title.innerHTML = "Blblblblblblbl"
})


//Evenement avec fonction fl√©ch√©e √† √©viter 

// btn.addEventListener("click", () => {
//     title.innerHTML = "Blblblblblblbl"
// })

let click = 0;
btn2.addEventListener("click", function () {
    click++; // √©quivalent √† click += 1
    clickNumber.innerHTML = click;
})

btn3.addEventListener("click", function () {
    click--; // √©quivalent √† click += 1
    clickNumber.innerHTML = click;
})


// Avec les input

const inputText = document.getElementById("input-text");
const input1 = document.getElementById("input1")
// Permet d'effacer le contenu de l'input lorsque l'on recharge la page
input1.value = ""


input1.addEventListener("input", function () {
    let valueInput = this.value;
    inputText.innerHTML = valueInput;

})


// Hierarchie

const mom = document.getElementById("mom");

// ChildNodes
// R√©cup√©rer tous les √©l√©ments de "mom" (meme le texte)
console.log(mom.childNodes);
// On r√©cup√®re les √©l√©ments √† l'int√©rieur de l'index 5
console.log(mom.childNodes[5].childNodes);


// Children
// R√©cup√©rer tous les √©l√©ments enfants directs de "mom" (pas le texte)
console.log(mom.children);

// First Child
console.log(mom.firstChild);

// FirstElementChild
console.log(mom.firstElementChild);


// On va supprimer le li de mom √† partir des param√®tres pr√©c√©dents
console.log(mom.children[2].firstElementChild.firstElementChild.remove());

// Cr√©ation d'un √©l√©ment
let img = document.createElement("img");
// On modifie son src
img.src = "https://previews.123rf.com/images/captainimages/captainimages1403/captainimages140300222/26708972-close-up-of-one-piece-of-fried-potato-chips-isolated-on-white-background.jpg";
img.style.height = "200px";
img.style.width = "200px";
img.alt = "Une chips"


// Maintenant qu l'on a cr√©e notre image, on peut l'accrocher √† un autre √©l√©ment en tant qu'enfant
mom.appendChild(img)




// R√©cup√©rer les classes
// M√©thode d√©conseill√©e
// const pokemons = document.getElementByClassName(".pokemons");

// M√©thode conseill√©e
const pokemons = document.querySelectorAll('.pokemons');
console.log(pokemons)
// Si on sait qu'il y a qu'un element d'une classe on peut utiliser
const listPokemons = document.querySelector('.list-pokemons');
console.log(listPokemons)

const colorPokemon = ["#ebae34", "#f5b0d7", "#f5bf82", "#d2faac", "#d7c5d9"]
for (let i = 0; i < colorPokemon.length; i++) {
    pokemons[i].style.color = colorPokemon[i];
}
// Ajouter une classe
// element.classList.add(nom de l'√©l√©ment)
// Enlever une classe
// element.classList.remove(nom de la classe)
// Basculer de classe
// element.classList.toggle(nom de la classe)




// SetTimeout

// setTimeout(function(){
//     console.log("3 secondes se sont √©coul√©es !")
// }, 3000)

// SetInterval

// setInterval(function(){
//     console.log("10 secondes viennent de passer !")
// }, 10000)

// clearTimeout

const timer = setTimeout(function () {
    console.log("3 secondes se sont √©coul√©es !")
}, 3000)
clearTimeout(timer)

const interval = setInterval(function () {
    console.log("1 secondes viennent de passer !")
}, 1000)
clearInterval(interval)



// TP LE SCROLL TAQUIN
const gentillesInsultes = [
    "Tu descends plus lentement qu‚Äôune mise √† jour Windows üêå",
    "Allez, on se r√©veille‚Ä¶ le bas de la page va pas venir tout seul ! üò¥",
    "Tu veux un caf√© pour te motiver ou c‚Äôest une strat√©gie de flemme ? ‚òï",
    "Je pourrais tricoter un pull pendant que tu scrolles‚Ä¶ üß∂",
    "C‚Äôest un concours de lenteur ou tu fais √ßa expr√®s ? üòÖ",
    "Encore un effort, c‚Äôest pas le Mont Everest non plus ‚õ∞Ô∏è",
    "Allez courage, m√™me les tortues ont des objectifs ! üê¢",
    "Tu scrolles comme si tu voulais pas savoir la fin üìú",
    "Je vois plus de poussi√®re que de progr√®s üëÄ",
    "On dirait que tu scrolles avec les coudes ü¶æ",
    "Si tu vas plus lentement, on va repartir en 2022‚Ä¶ ‚è≥",
    "Il y a des glaciers qui fondent plus vite que toi üåç",
    "M√™me une limace sous calmants serait d√©j√† arriv√©e üêå",
    "Tu veux qu‚Äôon t‚Äôapplaudisse pour chaque pixel descendu ? üëè",
    "Tu scrolles en morse ou c‚Äôest ton style naturel ? üß†",
    "Je me demande si t‚Äôas pas mis une brique sur la barre d‚Äôespace ü§î",
    "T‚Äôas le m√™me rythme qu‚Äôun fax sous la pluie üì†",
    "On est sur une promenade digestive ou un vrai scroll ? üçΩÔ∏è",
    "Tu vas finir par t'endormir avant d‚Äôy arriver üò¥",
    "Il faut que je t‚Äôenvoie une newsletter pour te motiver ? üì¨",
    "Tu scrolles comme si tu testais chaque pixel √† la main üßê",
    "Courage, t‚Äôes √† deux doigts d‚Äôarriver au milieu ! (ou pas...) üòá",
    "M√™me la barre de chargement d'Internet Explorer est jalouse de ta lenteur üíª",
    "Faut-il t‚Äôenvoyer une carte au tr√©sor pour trouver le bas ? üó∫Ô∏è",
    "Si tu scrolles encore plus doucement, je vais devoir appeler ta maman üë©‚Äçüë¶"
];

let intervalid = null;

// Fonction qui va v√©rifier si nou sommes en bas de la page
function isAtTheBottomOfThePage () {
    // window.innerHeight => taille en pixel de votre √©cran
    // window.scrollY => la position du scroll par rapport √† la taille maximale de l'√©cran
    // document.body.scrollHeight => C'est le 2000vh convertis en pixels (qu'on a ins√©r√© dans body)
    return window.innerHeight + window.scrollY >= document.body.scrollHeight - 10;
}

function startPunchlines() {
    if( intervalid === null){
        intervalid = setInterval(function(){
            if(!isAtTheBottomOfThePage()){
                const punchline = gentillesInsultes[Math.floor(Math.random() * gentillesInsultes.length)];
                console.log(punchline)
            } else {
                console.log("Tu as r√©ussi !")
                // fonction qui arrete le chrono
                stopPunchlines
            }
        }, 1000)
    }
}

function stopPunchlines() {
    clearInterval(intervalid)
    intervalid = null;
}





startPunchlines();